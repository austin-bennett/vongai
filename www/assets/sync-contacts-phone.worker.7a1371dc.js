/*! Capacitor: https://capacitorjs.com/ - MIT License */const Q=t=>{const e=new Map;e.set("web",{name:"web"});const n=t.CapacitorPlatforms||{currentPlatform:{name:"web"},platforms:e},o=(f,P)=>{n.platforms.set(f,P)},a=f=>{n.platforms.has(f)&&(n.currentPlatform=n.platforms.get(f))};return n.addPlatform=o,n.setPlatform=a,n},X=t=>t.CapacitorPlatforms=Q(t),M=X(typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});M.addPlatform;M.setPlatform;var L;(function(t){t.Unimplemented="UNIMPLEMENTED",t.Unavailable="UNAVAILABLE"})(L||(L={}));class T extends Error{constructor(e,n,o){super(e),this.message=e,this.code=n,this.data=o}}const Y=t=>{var e,n;return t!=null&&t.androidBridge?"android":!((n=(e=t==null?void 0:t.webkit)===null||e===void 0?void 0:e.messageHandlers)===null||n===void 0)&&n.bridge?"ios":"web"},Z=t=>{var e,n,o,a,f;const P=t.CapacitorCustomPlatform||null,r=t.Capacitor||{},H=r.Plugins=r.Plugins||{},d=t.CapacitorPlatforms,I=()=>P!==null?P.name:Y(t),y=((e=d==null?void 0:d.currentPlatform)===null||e===void 0?void 0:e.getPlatform)||I,G=()=>y()!=="web",R=((n=d==null?void 0:d.currentPlatform)===null||n===void 0?void 0:n.isNativePlatform)||G,B=i=>{const s=U.get(i);return!!(s!=null&&s.platforms.has(y())||_(i))},k=((o=d==null?void 0:d.currentPlatform)===null||o===void 0?void 0:o.isPluginAvailable)||B,D=i=>{var s;return(s=r.PluginHeaders)===null||s===void 0?void 0:s.find(p=>p.name===i)},_=((a=d==null?void 0:d.currentPlatform)===null||a===void 0?void 0:a.getPluginHeader)||D,z=i=>t.console.error(i),K=(i,s,p)=>Promise.reject(`${p} does not have an implementation of "${s}".`),U=new Map,F=(i,s={})=>{const p=U.get(i);if(p)return console.warn(`Capacitor plugin "${i}" already registered. Cannot register plugins twice.`),p.proxy;const h=y(),b=_(i);let g;const N=async()=>(!g&&h in s?g=typeof s[h]=="function"?g=await s[h]():g=s[h]:P!==null&&!g&&"web"in s&&(g=typeof s.web=="function"?g=await s.web():g=s.web),g),V=(l,c)=>{var v,w;if(b){const m=b==null?void 0:b.methods.find(u=>c===u.name);if(m)return m.rtype==="promise"?u=>r.nativePromise(i,c.toString(),u):(u,C)=>r.nativeCallback(i,c.toString(),u,C);if(l)return(v=l[c])===null||v===void 0?void 0:v.bind(l)}else{if(l)return(w=l[c])===null||w===void 0?void 0:w.bind(l);throw new T(`"${i}" plugin is not implemented on ${h}`,L.Unimplemented)}},W=l=>{let c;const v=(...w)=>{const m=N().then(u=>{const C=V(u,l);if(C){const E=C(...w);return c=E==null?void 0:E.remove,E}else throw new T(`"${i}.${l}()" is not implemented on ${h}`,L.Unimplemented)});return l==="addListener"&&(m.remove=async()=>c()),m};return v.toString=()=>`${l.toString()}() { [capacitor code] }`,Object.defineProperty(v,"name",{value:l,writable:!1,configurable:!1}),v},$=W("addListener"),A=W("removeListener"),q=(l,c)=>{const v=$({eventName:l},c),w=async()=>{const u=await v;A({eventName:l,callbackId:u},c)},m=new Promise(u=>v.then(()=>u({remove:w})));return m.remove=async()=>{console.warn("Using addListener() without 'await' is deprecated."),await w()},m},x=new Proxy({},{get(l,c){switch(c){case"$$typeof":return;case"toJSON":return()=>({});case"addListener":return b?q:$;case"removeListener":return A;default:return W(c)}}});return H[i]=x,U.set(i,{name:i,proxy:x,platforms:new Set([...Object.keys(s),...b?[h]:[]])}),x},J=((f=d==null?void 0:d.currentPlatform)===null||f===void 0?void 0:f.registerPlugin)||F;return r.convertFileSrc||(r.convertFileSrc=i=>i),r.getPlatform=y,r.handleError=z,r.isNativePlatform=R,r.isPluginAvailable=k,r.pluginMethodNoop=K,r.registerPlugin=J,r.Exception=T,r.DEBUG=!!r.DEBUG,r.isLoggingEnabled=!!r.isLoggingEnabled,r.platform=r.getPlatform(),r.isNative=r.isNativePlatform(),r},j=t=>t.Capacitor=Z(t),O=j(typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{}),ee=O.registerPlugin;O.Plugins;class ne{constructor(e){this.listeners={},this.windowListeners={},e&&(console.warn(`Capacitor WebPlugin "${e.name}" config object was deprecated in v3 and will be removed in v4.`),this.config=e)}addListener(e,n){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(n);const a=this.windowListeners[e];a&&!a.registered&&this.addWindowListener(a);const f=async()=>this.removeListener(e,n),P=Promise.resolve({remove:f});return Object.defineProperty(P,"remove",{value:async()=>{console.warn("Using addListener() without 'await' is deprecated."),await f()}}),P}async removeAllListeners(){this.listeners={};for(const e in this.windowListeners)this.removeWindowListener(this.windowListeners[e]);this.windowListeners={}}notifyListeners(e,n){const o=this.listeners[e];o&&o.forEach(a=>a(n))}hasListeners(e){return!!this.listeners[e].length}registerWindowListener(e,n){this.windowListeners[n]={registered:!1,windowEventName:e,pluginEventName:n,handler:o=>{this.notifyListeners(n,o)}}}unimplemented(e="not implemented"){return new O.Exception(e,L.Unimplemented)}unavailable(e="not available"){return new O.Exception(e,L.Unavailable)}async removeListener(e,n){const o=this.listeners[e];if(!o)return;const a=o.indexOf(n);this.listeners[e].splice(a,1),this.listeners[e].length||this.removeWindowListener(this.windowListeners[e])}addWindowListener(e){window.addEventListener(e.windowEventName,e.handler),e.registered=!0}removeWindowListener(e){!e||(window.removeEventListener(e.windowEventName,e.handler),e.registered=!1)}}var S;(function(t){t[t.Person=0]="Person",t[t.Organization=1]="Organization"})(S||(S={}));const te=ee("Contacts",{web:()=>import("./web.b52b7486.js").then(t=>new t.ContactsPluginWeb)});onmessage=function(t){console.log(":: CONTACTS WORKER INIT :: data posted from main thread::",t.data),te.getContacts().then(e=>{const n={};for(const o of e.contacts){console.log(":: CONTACTS INIT::",o);const a=o.name[0].toUpperCase();n.hasOwnProperty(a)||(n[a]=[]),n[a].push(o)}console.log(":: CONTACTS WORKER INIT :: data posted from main thread::",t.data),postMessage(n)})};export{ne as W};
